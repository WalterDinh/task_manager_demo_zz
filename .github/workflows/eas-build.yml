name: EAS Build & Firebase Deploy

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Yarn
        run: npm install -g yarn

      - name: Install dependencies
        run: yarn install

      - name: Install Expo CLI
        run: npm install -g expo-cli

      - name: Install EAS CLI
        run: yarn global add eas-cli@latest

      - name: Accept Android SDK licenses
        run: |
          yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses
          $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --install "ndk;27.0.11902837"

      - name: Setup EAS Build Cache
        uses: actions/cache@v3
        with:
          path: ~/.eas-build-local
          key: ${{ runner.os }}-eas-build-local-${{ hashFiles('**/package.json') }}
          restore-keys: ${{ runner.os }}-eas-build-local-

      - name: Verify EAS CLI Installation
        run: eas --version

      - name: Build Android APK
        env:
          EXPO_TOKEN: ${{ secrets.EAS_TOKEN }}
        run: >-
          eas build --platform android --profile production-apk --local --non-interactive
          --output=./android-builds/app-production.apk

      - name: Write Firebase credentials
        run: echo '${{ secrets.GOOGLE_APPLICATION_CREDENTIALS_JSON }}' > ${{ github.workspace }}/firebase-service-account.json

      - name: Upload to Firebase App Distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{ secrets.FIREBASE_ANDROID_APP_ID }}
          serviceCredentialsFileContent: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS_JSON }}
          file: ./android-builds/app-production.apk
          groups: testers
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ github.workspace }}/firebase-service-account.json
